// Forms
//
// Different parts of forms.
//
// Style guide: forms

// Form__Wrapper
//
// Wrapper for parts of form, for example the action-part (submit-button).
//
// No styleguide reference
.c-form__wrapper {
  @include clearfix;

  .c-search & {
    display: inline;
  }

  // Center form actions (submit button)
  &[id$='actions'] {
    text-align: center;
  }
}

// List
//
// No styleguide reference
.c-form__list {
  list-style: none;
  margin: 0.2em 0;
  padding: 0;
}

// Form item
//
// Wrapper for a form element (or group of form elements) and its label.
//
// Markup: form-item.twig
//
// Style guide: forms.form-item
.c-form__item {
  margin-bottom: 1.5em;
  max-width: pxtoem(616); // Width of 8 columns

  &.-checkbox,
  &.-radio {
    margin-bottom: 0.5em;
  }

  &.-search {
    max-width: none;
    display: inline-block;
    width: 65%;
    margin-right: 2%;
    margin-bottom: 0;

    @include respond-to('medium') {
      width: 78%;
    }
  }
}

// Label
//
// The `<label>` element represents a caption of a form field. The label can be
// associated with a specific form control by using the `for` attribute or by
// putting the form control inside the label element itself.
//
// Markup: forms-label.twig
//
// Style guide: forms.labels
.c-form__label {
  cursor: pointer;
  display: block;
  font-size: pxtoem(16);
  margin-bottom: pxtoem(5,16);

  @include respond-to('large') {
    font-size: pxtoem(18);
  }

  &.-option {
    font-weight: normal;
    display: inline-block;
    margin: 0;
  }
}

.c-form__required {
  color: color('blue');
  font-weight: bold;
}

// Description
//
// Descriptions are sometimes needed as a complement to the label.
// Descriptions should make use of the `aria-describedby`-attribute to
// indicate a connection between `input` and description.
//
// Markup: forms-description.twig
//
// Style guide: forms.description
.c-form__description {
  margin-top: 0.5em;
  font-size: pxtoem(14);
  color: color('grey');
  display: block;
}

// Text inputs
//
// The `<input>` element is mostly used for text-based inputs that include the
// HTML5 types: `text`, `search`, `tel`, `url`, `email`, `password`, `date`,
// `time`, `number`, `range`, `color`, and `file`.
//
// :disabled  - Disabled
//
// Markup: forms-input.twig
//
// Style guide: forms.text

// Textarea
//
// The `<textarea>` element represents a multi-line plain text form field.
//
// :disabled  - Disabled
//
// Markup: forms-textarea.twig
//
// Style guide: forms.textarea
%form--element,
.c-form__search,
.c-form__password,
.c-form__text,
.c-form__textarea {
  @include transition;
  border: 0;
  font-size: pxtoem(16);
  color: color('grey', 'darker');
  padding: 0.9em 1em 0.8em;
  background-color: color('white');
  border-radius: pxtoem(5);
  border: 1px solid ('grey', 'darker');
  box-shadow: 0 0 0 1px color('grey');
  box-sizing: border-box;
  width: calc(100% - 2px);
  margin: 1px; // Compensate for box-shadow being outside
  max-width: pxtoem(614); // Width of 8 columns minus box-shadow compensation

  &:hover,
  &:focus,
  &.pseudo-class-focus,
  &:active {
    outline: 0;
    box-shadow: 0 0 0 1px color('black');
  }

  &.-error {
    box-shadow: 0 0 0 2px color('red');
    border-radius: pxtoem(5) pxtoem(5) 0 0;
    margin: 2px; // Compensate for box-shadow being outside
    max-width: pxtoem(612); // Width of 8 columns minus box-shadow compensation

    &:not(.c-form__select) {
      background-image: url('../images/svg/icon-warning.svg');
      background-repeat: no-repeat;
      background-position: right 0.6em center;
      background-size: 20px 20px;
    }
  }

  &.-success {
    border-color: color('green');
  }

  &:disabled,
  &.pseudo-class-disabled {
    background-color: color('grey', 'light');
    color: color('grey');
    box-shadow: 0 0 0 1px color('grey', 'light');
    cursor: not-allowed;
  }

  .c-search & {
    width: 100%;
    max-width: none;

    &:focus {
      box-shadow: 0 0 0 1px color('blue');
    }
  }
}

// File upload
//
// Markup: forms-file.twig
//
// Style guide: forms.form__file
.c-form__file {
  clear: both;
  position: relative;
  width: 100%;
  min-height: pxtoem(46,16);
  margin-bottom: 1em;
  max-width: 35em;

  &:after {
    @extend %form--element;
    @include transition;
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    color: color('grey');
    font-weight: normal;
    pointer-events: none;
    z-index: z('dropdown');
    -webkit-appearance: none;
    outline: 0;
    margin: 0;
    text-align: left;
    font-size: pxtoem(16,16);
    border: solid 1px color('grey', 'light');
    height: pxtoem(46,16);
    line-height: 1.8;
    vertical-align: top;
    width: 100%;
    cursor: pointer;

    @include respond-to('medium') {
      padding: pxtoem(10,16) 5.8% pxtoem(10,16) 2.8%;
      width: 100%;
    }

    @include respond-to('large') {
      padding: pxtoem(10,16) 35px pxtoem(10,16) 15px;
      max-width: 100%;
    }
  }

  &:before {
    @include transition;
    font-weight: bold;
    font-size: pxtoem(16);
    padding: 0.9em 1.2em 0.6em;
    border-radius: 0 pxtoem(5) pxtoem(5) 0;
    text-decoration: none;
    display: inline-block;
    max-width: 100%;
    line-height: pxtoem(23);
    background-color: color('blue');
    color: color('white');
    width: auto;
    content: 'VÃ¤lj fil';
    position: absolute;
    top: -1px;
    right: -1px;
    pointer-events: none;
    z-index: z('overlay');
  }

  &:hover,
  &:focus,
  &:active {
    &:before {
      background-color: color('grey', 'darker');
    }

    &:after {
      border: solid 1px color('grey', 'dark');
    }
  }

  &:active {
    &:before {
      box-shadow: inset 2px 2px 5px 0 rgba(50, 50, 50, 0.5);
    }
  }

  [type="file"] {
    width: 100%;
    height: pxtoem(46,16);
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;
    z-index: z('overlay');
    cursor: pointer;
  }
}

// Select list
//
// The `<select>` element represents a form field for selecting amongst a set of
// options.
//
// Known limitation: by default, Chrome and Safari on OS X allow very limited
// styling of `<select>`, unless a `border` property is set.
//
// :disabled  - Disabled
//
// Markup: forms-select.twig
//
// Style guide: forms.select
.c-form__select {
  @extend %form--element;
  cursor: pointer;
  background-image: url('../images/svg/form-dropdown.svg');
  background-size: pxtoem(9) pxtoem(23);
  background-position: right 1.3rem center;
  background-repeat: no-repeat;
  width: 100%;
  max-width: pxtoem(614); // Width of 8 columns minus box-shadow compensation

  &:disabled,
  &.pseudo-class-disabled {
    background-image: none;
    color: color('grey');
    background-color: color('grey', 'light');
    top: 0;
    cursor: not-allowed;
  }
}

// Checkboxes
//
// If an `<input>` element has the `type='checkbox'` attribute set, the form
// field is displayed as a checkbox.
//
// Markup: forms-checkbox.twig
//
// Style guide: forms.checkboxes

// Radio buttons
//
// If an `<input>` element has the `type='radio'` attribute set, the form field
// is displayed as a radio button.
//
// Markup: forms-radio.twig
//
// Style guide: forms.radios
.c-form__checkboxes,
.c-form__radios {
  padding: 0;
  margin: 0 0 1.5em;
  border: 0;
}

// scss-lint:disable QualifyingElement
.c-form__checkbox,
.c-form__radio {
  @extend %visually-hidden;

  + .c-form__label {
    cursor: pointer;
    line-height: 1.2;
    padding: 0.7em 0.9em 0.7em 1.1em;
    border-radius: 2em;
    color: color('blue');
    font-weight: 500;
    background: color('white');

    &::before {
      background: white;
      content: '\a0';
      display: inline-block;
      line-height: 0.8;
      margin-right: 0.6em;
      text-indent: 0.15em;
      vertical-align: 0.2em;
    }
  }

  &:disabled + .c-form__label {
    background: color('grey', 'light');
    color: color('grey');
    border-color: color('grey', 'light');
  }
}

.c-form__radio {
  + .c-form__label {

    &::before {
      background: color('white');
      border-radius: 100%;
      box-shadow: 0 0 0 4px color('white'), 0 0 0 5px color('blue');
      content: '\a0';
      display: inline-block;
      line-height: 0.3;
      margin-right: 0.7em;
      text-indent: 0.15em;
      vertical-align: 0.2em;
      height: 0.7em;
      width: 0.7em;
      border-radius: 100%;
    }
  }

  &:checked + .c-form__label {
    background: color('blue');
    color: color('white');

    &::before {
      background: color('white');
      box-shadow: 0 0 0 4px color('blue'), 0 0 0 6px color('white');
    }
  }

  &:disabled + .c-form__label::before {
    background: color('grey');
    box-shadow: 0 0 0 4px color('grey');
    cursor: not-allowed;
  }

  &.is-tabbed,
  &:focus,
  &:active {
    + .c-form__label {
      box-shadow: 0 0 3px color('blue'), 0 0 7px color('blue');
    }
  }
}

.c-form__checkbox {
  + .c-form__label {

    &::before {
      box-shadow: 0 0 0 1px color('black', 'tint');
      color: color('blue');
      vertical-align: middle;
      height: 0.7em;
      width: 0.7em;
      font-size: 1.5em;
      margin-right: 0.4em;
    }
  }

  &:checked + .c-form__label {
    &::before {
      background-image: url('../images/svg/form-check.svg');
      background-repeat: no-repeat;
      background-color: color('blue');
      box-shadow: 0 0 0 2px color('blue');
    }
  }

  &:disabled + .c-form__label::before {
    background: color('grey');
    box-shadow: 0 0 0 1px color('grey');
    cursor: not-allowed;
  }

  &.is-tabbed,
  &:focus,
  &:active {
    + .c-form__label::before {
      box-shadow: 0 0 0 2px color('blue'), 0 0 10px color('blue');
    }
  }
}
// scss-lint:enable QualifyingElement

// Error messages
//
// Can be customized based on what solution is being used for error messages.
// Clientside validation can use libraries like [validatr](https://jaymorrow.github.io/validatr/).
//
// Error messages should make use of the `aria-describedby`-attribute to
// indicate a connection between `input` and message. Can temporary replace the
// input description.
//
// Markup: forms-error.twig
//
// Style guide: forms.errors
.c-form__error {
  background-color: color('red');
  padding: 0.6em 1em 0.7em;
  color: color('white');
  font-size: pxtoem(13);
  max-width: pxtoem(619,13); // Width of 8 columns
}

.c-form__list {
  list-style: none;
}

// Fieldsets
//
// The `<fieldset>` element groups a set of form fields, optionally under a
// common name given by the `<legend>` element.
//
// Markup: forms-fieldset.twig
//
// Style guide: forms.fieldset
.c-fieldset {
  @extend %clearfix;
  padding: 0;
  margin-top: 2em;
  margin-bottom: 2em;
  border-bottom: 1px solid color('grey');
  position: relative;

  .c-fieldset {
    padding-top: 2em;
    border-bottom: 0;
    border-top: 1px solid color('grey');

    &:last-child {
      border-bottom: 0;
    }
  }
}

.c-fieldset__legend {
  @extend %heading-c;
  text-align: center;
  display: block;
  margin-bottom: 0.8em;
}

.c-fieldset__description {
  font-size: pxtoem(18);
  line-height: 1.65;
  margin: 0 0 2.2em;

  a {
    text-decoration: underline;
  }
}

.c-form__submit {
  @extend %button;
  border: solid 1px color('blue');
  background-color: color('blue');
  color: color('white');

  [class^="c-icon"] {
    stroke: color('white');
  }

  &:hover,
  &:focus,
  a:hover,
  a:focus {
    border: solid 1px color('blue');
    background-color: color('blue');
    color: color('white');
  }

  &.-light {
    border: solid 1px color('blue');
    background-color: color('blue');

    &:hover,
    &:focus {
      border: solid 1px color('blue');
      background-color: color('blue');
    }
  }

  .c-search & {
    vertical-align: top; /* Compensating for input field having box-shadow on top. */
    min-width: 0;
    width: 32%;

    @include respond-to('medium') {
      width: 19%;
    }
  }

  .c-search.-page & {
    margin-top: 1.8em;
  }
}
